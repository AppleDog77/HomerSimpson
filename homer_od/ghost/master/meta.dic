//—————————————————————————————— Installing something ——————————————————————————————
//https://ukagakadreamteam.github.io/ukadoc/manual/list_shiori_event.html#OnInstallBegin

OnInstallComplete
{
	"\0\s[0][Installed %(reference1) (%(reference0)).]"
	--
	//A little menu to open or change to the ghost that was installed immediately
	if "ghost" _in_ reference0
	{
		"\n\n\_q"
		--
		"\![*]\__q[OnInstallComplete.Action,call]Call %(reference0)\__q  \![*]\__q[OnInstallComplete.Action,change]Change to %(reference0)\__q\n\n"
		--
		"\![*]\q[Thanks,blank]"
	}
}

OnInstallComplete.Action
{
	if reference0 == "change"
	{
		"\![change,ghost,lastinstalled]"
	}
	else //call
	{
		"\![call,ghost,lastinstalled]"
	}
}

OnInstallFailure
{
	_reason = reference0
	case reference0
	{
		when "unlha32"; _reason = "could not load the dll to decompress lzh files"
		when "extraction"; _reason = "failed to decompress the file"
		when "invalid type"; _reason = "the install.txt is incorrect"
		when "unsupported"; _reason = "the archive is not supported"
		when "password"; _reason = "incorrect password"
		when "artificial"; _reason = "canceled by user"
	}

	"\0\s[0][Could not complete installation: %(_reason).]"
}


//—————————————————————————————— Creating a .nar file ——————————————————————————————
//https://ukagakadreamteam.github.io/ukadoc/manual/list_shiori_event.html#OnNarCreating

OnNarCreated
{
	//Makes a clickable link that'll open the location of the file they just made
	_nar = "\_a[OnNarLocation,""%(reference1)""]%(reference0)\_a"

	"\0\s[0][Successfully created %(_nar).]"
}

OnNarLocation
{
	_path = SPLITPATH(reference0)[0] + SPLITPATH(reference0)[1]

	"\![open,file,""%(_path)""]"
}
//—————————————————————————————— Network Update ——————————————————————————————
//https://ukagakadreamteam.github.io/ukadoc/manual/list_shiori_event.html#OnUpdateBegin

OnUpdateBegin
{
	"\0\s[0][Checking for updates.]\w8"
}

//reference0 is the number of new files, starting from 0
OnUpdateReady
{
	reference0++ //Number of files starts from 0, so this displays the correct amount
	
	//plural checks, adds an s and changes is to are if there's more than 1 file
	_s = ""; _are = "is"
	if reference0 != 1; {_s = "s"; _are = "are"}
	
	"\0\s[0][There %(_are) %(reference0) new file%(_s).]\w8"
}

//When the update finishes. Don't forget to initialize any new variables you've created! I highly highly recommend using OnInitialize for this (it's in boot.dic), in case the user updates via the ghost explorer or some other means.
//reference0 is 'none' if there were no new files to update with
OnUpdateComplete
{
	if reference0 == "none"
	{
		"\0\s[0][There are no new files.]"
	}
	else
	{
		"\0\s[0][Update complete.]"
	}
}

OnUpdateFailure
{	
	_file = SPLITPATH(reference1)[2] + SPLITPATH(reference1)[3] //For MD5 errors, this gets the name and extension of the offending file
	_reason = reference0
	case reference0
	{
		when "timeout"; _reason = "connection timed out"
		when "md5 miss"; _reason = "MD5 error on file %(_file)\n\nPlease contact the ghost author for assistance"
		when "artificial"; _reason = "canceled by user"
	}
	"\0\s[4][Could not update: %(_reason).]"
}

//—————————————————————————————— SNTP (clock fixing) ——————————————————————————————
//https://ukagakadreamteam.github.io/ukadoc/manual/list_shiori_event.html#OnSNTPBegin

OnSNTPCompare
{
	if reference3 != 0
	{
		_s = ""; if reference3 != 1; _s = "s"

		"\0\s[3][The clock is off by %(reference3) second%(_s).]\n\n"
		--
		"\![*]\q[Fix it,script:\6]  \![*]\q[Leave it,blank]"
	}
	else
	{
		"\0\s[0][The clock is accurate.]"
	}
}

OnSNTPCorrect
{
	"\0\s[0][The clock has been corrected.]"
}

OnSNTPFailure
{
	"\0\s[4]\![sound,play,speech\doh.mp3,--volume=50]D'oh! [Could not correct the clock.]"
}

//Other Stuff
OnScreenSaverEnd
 {
	"\0\s[4]Aww, I wanted to see what happens next!\e"
 }

OnShellScaling
{
	if reference0 >= 150 //this number is the percentage that you're scaling the ghost up to. In this case, it's 150%.
	{
		"\0\s[1]\![sound,play,speech\laugh.mp3,--volume=50]Hahaha! All Hail King Homer!\e"
	}
	elseif reference0 == 100 //this is 100%
	{
		"\0\s[3]Aw, I'm back to normal!\e"
	}
	elseif reference0 == 50 //this is 50%. You can add any percentage that's listed under shell scaling if you want using more elseifs.
	{
		"\0\s[0]Ooh, I wonder if I can now get those pie pieces that fell into the mouse hole a while back...\e"
	}
}

OnFileDrop2
{
	_filepath = SPLITPATH(reference0)
	_filename = _filepath[2]
	_fileext = TOLOWER(_filepath[3])
	case _fileext
	{
		when ".jpg", ".jpeg", ".bmp", ".gif", ".png" //These are the formats your ghost will recognize as image files to set as the background.
		{
			Wallpaperfile = reference0

			"\0\s[0]\![sound,play,speech\hmm.mp3,--volume=50]Ooh, what's this? %(_filename)%(_fileext)...\w8 A wallpaper, eh? How would you like me to set it?\n\n[half]/
			\q[Centered,SetWallpaper_0]\n/
			\q[Tiled,SetWallpaper_1]\n/
			\q[Stretched,SetWallpaper_2]\n\n[half]/
			\q[No thanks,SetWallpaper_Cancel]\e"
		}
		when ".mid", ".wav", ".mp3", ".wma", ".au" //Other file formats you might want to give your ghost a specific response to.
		{
			"\0\s[1]%(_filename)%(_fileext)! That's my current favorite song!\e"
		}
		when ".xcf", ".kra", ".psd", ".mdp"
		{
			"\0\s[0]I'm not a big art type guy, but this looks pretty cool!\e"
		}
		others //Any other file format. As a note here, if you drop something ghost-related on them that does not have an install.txt, then they won't install it and will just say this response. If you are testing your balloon or nar files and you get this response instead of a proper installation, you should check and make sure you have an install.txt in the file!
		{
			"\0\s[3]%(_filename)%(_fileext)... What do you want me to do with this?\e"
		}
	}
}

//This set of options sets the wallpaper up. You can replace the dialogue, but make sure to leave the \![set,wallpaper, etc.] tag at the beginning.

Select.SetWallpaper_0
{
	"\![set,wallpaper,%(Wallpaperfile),center]\0\s[0]Center it!\e"
}
Select.SetWallpaper_1
{
	"\![set,wallpaper,%(Wallpaperfile),tile]\0\s[0]Tile it!\e"
}
Select.SetWallpaper_2
{
	"\![set,wallpaper,%(Wallpaperfile),stretch]\0\s[0]Stretch it!\e"
}
Select.SetWallpaper_Cancel
{
	"\0\s[0]Okay then. But why not? It's a really nice picture.\e"
}
